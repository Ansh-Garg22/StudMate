<!DOCTYPE html>
<html>
  <head>
    <title>Chat Room</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
      integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
   <link rel="stylesheet" href="/css/chatrrom.css"><link rel="icon" type="image/x-icon" href="/css/images/favicon.ico">
  </head>
  <body>
    <div id="nav-bar">
      <div class="nav1">
        <h1>
          <span>S</span><span>T</span><span>U</span><span>D</span><span>E</span
          ><span>A</span><span>S</span><span>E</span>
        </h1>
      </div>
      <div class="nav2">
        <ul id="navbar2">
          <li class="navbar2-feature"><a href="/home">Home</a></li>
          <li class="navbar2-feature"><a href="#">Dashboard</a></li>
          <li class="navbar2-feature"><a href="#/team">Team</a></li>
        </ul>
      </div>
      <div class="nav3">
        <ul id="navbar3">
          <li class="navbar3-feature"><a href="#" id="nav3-a1">Log in</a></li>
          <li class="navbar3-feature"><a href="/chatlogout" id="nav3-a2">Logout</a></li>
        </ul>
      </div>
    </div>
    <div class="container">
      <div class="left">
        <div>
          <br />
        </div>
        <div class="box">
          <img src="/css/images/user.png" alt="" />
          <h3 style="font-size: 1.5rem">Alumni 1</h3>
        </div>
        <div class="box">
          <img src="/css/images/user2.png" alt="" />
          <h3 style="font-size: 1.5rem">User 1</h3>
        </div>
      </div>
      <div class="right">
        <div class="head">
          <img src="/css/images/user.png" alt="" />
          <h1 style="margin-left: 10px">Welcome, <%= user.name %></h1>
        </div>
        <div id="messages"></div>
        <div class="input-container">
          <input
            type="text"
            id="message-input"
            placeholder="Type your message..."
          />
          <i
            class="fa-solid fa-paper-plane"
            class="send-btn"
            onclick="sendMessage()"
          ></i>
        </div>
      </div>
    </div>
    
    <!-- Include moment.js library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();
      const userId = "<%= user._id %>"; // Get user ID from server-side
      const username = "<%= user.name %>";
      socket.on("connect", () => {
        console.log("Connected to server");
        socket.emit("join-room", userId); // Send user ID to join room
        getInitialMessages(); // Get initial messages when connected
      });

      socket.on("new-message", (message) => {
        const messagesContainer = document.getElementById("messages");
        const messageElement = document.createElement("div");
        messageElement.classList.add("message"); // Add a base class for styling

        const messageHeader = document.createElement("div");
        messageHeader.classList.add("message-header");
        const usernameElement = document.createElement("span");
        usernameElement.textContent = message.sender.username;
        const timestampElement = document.createElement("span");
        timestampElement.textContent = moment(message.timestamp).format("LT"); // Change the format to show only the time
        messageHeader.appendChild(usernameElement);
        messageHeader.appendChild(timestampElement);

        const contentElement = document.createElement("div");
        contentElement.classList.add("message-content");
        contentElement.textContent = message.content;

        messageElement.appendChild(messageHeader);
        messageElement.appendChild(contentElement);

        if (message.sender._id === userId) {
          messageElement.classList.add("message--self");
        } else {
          messageElement.classList.add("message--other");
        }

        messagesContainer.appendChild(messageElement);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
      });

      async function getInitialMessages() {
        try {
          const response = await fetch("/get-messages");
          const messages = await response.json();
          const messagesContainer = document.getElementById("messages");

          const reversedMessages = messages.slice().reverse();
          reversedMessages.forEach((message) => {
            const messageElement = document.createElement("div");
            messageElement.classList.add("message");

            const messageHeader = document.createElement("div");
            messageHeader.classList.add("message-header");
            const usernameElement = document.createElement("span");
            usernameElement.textContent = message.sender.name;
            const timestampElement = document.createElement("span");
            timestampElement.textContent = moment(message.timestamp).format(
              "LT"
            ); // Change the format to show only the time

            messageHeader.appendChild(usernameElement);
            messageHeader.appendChild(timestampElement);

            const contentElement = document.createElement("div");
            contentElement.classList.add("message-content");
            contentElement.textContent = message.content;

            messageElement.appendChild(messageHeader);
            messageElement.appendChild(contentElement);

            if (message.sender._id === userId) {
              messageElement.classList.add("message--self");
            } else {
              messageElement.classList.add("message--other");
            }

            messagesContainer.appendChild(messageElement);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
          });
        } catch (error) {
          console.error("Error fetching messages:", error);
        }
      }
      function sendMessage() {
        const messageInput = document.getElementById("message-input");
        const content = messageInput.value.trim();

        if (content) {
          socket.emit("send-message", {
            content: content,
            senderId: userId,
            sendername: username, // Send user ID along with the message
          });
          messageInput.value = "";
        }
      }
    </script>
  </body>
</html>
